@page "/AdminDashboard"
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider

<link rel="stylesheet" href="/Estilos/Cierre.css" />

<AuthorizeView Roles="Admin">
    <!-- Contenido principal -->
    <div class="container d-flex flex-column align-items-center mt-3 text-center">
        <div class="corner-label">
            <span><a class="fw-bolder" href="/logout">Cerrar sesi&oacute;n</a></span>
        </div>

        <div class="row mb-3">
            <h2 class="mb-2">Bienvenido Administrador</h2>
        </div>

        <div class="row justify-content-center">
            <div class="col-md-3 mb-4 d-flex justify-content-center">
                <div class="card h-100 text-center">
                    <img src="/Imagenes/MenuPrincipal.jpg" class="card-img-top" alt="Men&uacute; Principal">
                    <div class="card-body d-flex flex-column align-items-center">
                        <p class="card-text">Accede al Men&uacute; Principal.</p>
                        <a href="/MenuPrincipal" class="btn btn-primary mt-auto">Men&uacute; Principal</a>
                    </div>
                </div>
            </div>
            <div class="col-md-3 mb-4 d-flex justify-content-center">
                <div class="card h-100 text-center">
                    <img src="/Imagenes/MenuSecundario.jpeg" class="card-img-top" alt="Men&uacute; Secundario">
                    <div class="card-body d-flex flex-column align-items-center">
                        <p class="card-text">Accede al Men&uacute; Secundario.</p>
                        <a href="/MenuSecundario" class="btn btn-secondary mt-auto">Men&uacute; Secundario</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</AuthorizeView>

@code {
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var isAdmin = authState.User?.IsInRole("Admin") ?? false;

        if (!isAdmin)
        {
            Navigation.NavigateTo("/access-denied");
        }
    }
}
